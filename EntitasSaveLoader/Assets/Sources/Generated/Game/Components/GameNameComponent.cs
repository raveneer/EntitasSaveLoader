//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Name name { get { return (Name)GetComponent(GameComponentsLookup.Name); } }
    public bool hasName { get { return HasComponent(GameComponentsLookup.Name); } }

    public void AddName(string newValue) {
        var index = GameComponentsLookup.Name;
        var component = CreateComponent<Name>(index);
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceName(string newValue) {
        var index = GameComponentsLookup.Name;
        var component = CreateComponent<Name>(index);
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveName() {
        RemoveComponent(GameComponentsLookup.Name);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherName;

    public static Entitas.IMatcher<GameEntity> Name {
        get {
            if (_matcherName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Name);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherName = matcher;
            }

            return _matcherName;
        }
    }
}
