//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Fire fire { get { return (Fire)GetComponent(GameComponentsLookup.Fire); } }
    public bool hasFire { get { return HasComponent(GameComponentsLookup.Fire); } }

    public void AddFire(float newStrength) {
        var index = GameComponentsLookup.Fire;
        var component = CreateComponent<Fire>(index);
        component.Strength = newStrength;
        AddComponent(index, component);
    }

    public void ReplaceFire(float newStrength) {
        var index = GameComponentsLookup.Fire;
        var component = CreateComponent<Fire>(index);
        component.Strength = newStrength;
        ReplaceComponent(index, component);
    }

    public void RemoveFire() {
        RemoveComponent(GameComponentsLookup.Fire);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFire;

    public static Entitas.IMatcher<GameEntity> Fire {
        get {
            if (_matcherFire == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Fire);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFire = matcher;
            }

            return _matcherFire;
        }
    }
}
